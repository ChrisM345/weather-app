(()=>{"use strict";var e={208:(e,n,t)=>{t.d(n,{A:()=>c});var r=t(354),a=t.n(r),i=t(314),o=t.n(i)()(a());o.push([e.id,"body {\n  background-color: lightblue;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nul {\n  list-style: none;\n  margin: 0;\n  padding: 10px;\n}\n\nli {\n  padding-top: 5px;\n  padding-bottom: 5px;\n}\n\nh3 {\n  margin: 0;\n  text-align: center;\n}\n\np {\n  margin: 5px;\n  text-align: center;\n}\n\n.current {\n  border: solid black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.current-details {\n  display: grid;\n  grid-template-columns: repeat(4, 200px);\n}\n\n.forecast {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n}\n.forecast-day {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: solid black;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,2BAA2B;EAC3B,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,SAAS;EACT,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;EACnB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,uCAAuC;AACzC;;AAEA;EACE,aAAa;EACb,qCAAqC;AACvC;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,mBAAmB;AACrB",sourcesContent:["body {\n  background-color: lightblue;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nul {\n  list-style: none;\n  margin: 0;\n  padding: 10px;\n}\n\nli {\n  padding-top: 5px;\n  padding-bottom: 5px;\n}\n\nh3 {\n  margin: 0;\n  text-align: center;\n}\n\np {\n  margin: 5px;\n  text-align: center;\n}\n\n.current {\n  border: solid black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.current-details {\n  display: grid;\n  grid-template-columns: repeat(4, 200px);\n}\n\n.forecast {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n}\n.forecast-day {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: solid black;\n}\n"],sourceRoot:""}]);const c=o},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,i){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(o[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&o[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(a," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},o=[],c=0;c<e.length;c++){var s=e[c],d=r.base?s[0]+r.base:s[0],l=i[d]||0,p="".concat(d," ").concat(l);i[d]=l+1;var u=t(p),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(m);else{var A=a(m,r);r.byIndex=c,n.splice(c,0,{identifier:p,updater:A,references:1})}o.push(p)}return o}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var i=r(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<i.length;o++){var c=t(i[o]);n[c].references--}for(var s=r(e,a),d=0;d<i.length;d++){var l=t(i[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=s}}},659:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{const e=[];class n{constructor(e,n,t,r,a,i,o,c,s,d,l,p){this.condition=e,this.icon=n,this.feelslike_f=t,this.gust_mph=r,this.humidity=a,this.last_updated=i,this.precip_in=o,this.temp_f=c,this.uv=s,this.vis_miles=d,this.wind_dir=l,this.wind_mph=p}addCurrentWeatherData(){e.push(this)}}const r=[];class a{constructor(e,n,t,r,a,i,o,c,s,d,l,p,u,m){this.date=e,this.avghumidity=n,this.avgtemp_f=t,this.avgvis_miles=r,this.condition=a,this.icon=i,this.chance_rain=o,this.chance_snow=c,this.maxtemp_f=s,this.maxwind_mph=d,this.mintemp_f=l,this.totalprecip_in=p,this.totalsnow_cm=u,this.uv=m}addForecastWeatherData(){r.push(this)}}const i=document.querySelector(".current"),o=document.querySelector(".forecast");var c=t(72),s=t.n(c),d=t(825),l=t.n(d),p=t(659),u=t.n(p),m=t(56),A=t.n(m),f=t(540),h=t.n(f),v=t(113),y=t.n(v),g=t(208),E={};E.styleTagTransform=y(),E.setAttributes=A(),E.insert=u().bind(null,"head"),E.domAPI=l(),E.insertStyleElement=h(),s()(g.A,E),g.A&&g.A.locals&&g.A.locals;let x="Chicago";const C=document.querySelector(".current-city");async function b(){try{const s=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=bb11d44ee4eb4fbda5504617242603&q=${x}&days=3`);if(!s.ok)throw new Error(s.status);const d=await s.json();t=d.current,e.length=0,new n((c=t).condition.text,c.condition.icon,c.feelslike_f,c.gust_mph,c.humidity,c.last_updated,c.precip_in,c.temp_f,c.uv,c.vis_miles,c.wind_dir,c.wind_mph).addCurrentWeatherData(),function(e){r.length=0;for(let t=0;t<e.forecastday.length;t++)n=e.forecastday[t],new a(n.date,n.day.avghumidity,n.day.avgtemp_f,n.day.avgvis_miles,n.day.condition.text,n.day.condition.icon,n.chance_rain,n.chance_snow,n.maxtemp_f,n.maxwind_mph,n.mintemp_f,n.totalprecip_in,n.totalsnow_cm,n.uv).addForecastWeatherData();var n}(d.forecast),function(){i.innerHTML="";const n=e[0],t=`Current Temp ${n.temp_f}°F`,r=n.last_updated.split(" ")[0],a=n.condition,o=n.icon,c=n.wind_dir,s=n.wind_mph,d=document.createElement("p");d.className="current-temp",d.innerText=t;const l=document.createElement("p");l.className="current-date",l.innerText=r;const p=document.createElement("p");p.className="current-condition",p.innerText=a;const u=document.createElement("img");u.src=o;const m=document.createElement("p");m.className="current-descrition",m.innerText=`Wind ${c} at ${s} mph.`,i.append(d),i.append(l),i.append(p),i.append(u),i.append(m);const A=document.createElement("div");A.className="current-details";const f=n.feelslike_f,h=n.humidity,v=n.uv,y=n.vis_miles,g=document.createElement("p");g.innerText=`Feels like\n${f}°F`;const E=document.createElement("p");E.innerText=`Humidity\n${h}`;const x=document.createElement("p");x.innerText=`UV index\n${v}`;const C=document.createElement("p");C.innerText=`Visibility\n${y} miles`,A.append(g),A.append(E),A.append(x),A.append(C),i.append(A)}(),o.innerHTML="",r.forEach((e=>{const n=document.createElement("div");n.className="forecast-day";const t=e.date,r=e.avghumidity,a=e.avgtemp_f,i=e.avgvis_miles,c=e.condition,s=e.icon,d=document.createElement("p");d.className="forecast-temp",d.innerText=`Average Temp: ${a}`;const l=document.createElement("p");l.className="forecast-date",l.innerText=t;const p=document.createElement("p");p.className="forecast-condition",p.innerText=c;const u=document.createElement("img");u.src=s,n.append(d),n.append(l),n.append(p),n.append(u);const m=document.createElement("div");m.className="forecast-details";const A=document.createElement("p");A.innerText=`Humidity: ${r}`;const f=document.createElement("p");f.innerText=`Visibility: ${i} miles`,m.append(A),m.append(f),n.append(m),o.append(n)}))}catch(e){alert(`Error! You entered ${x}. Please re-enter the city name`)}var t,c}document.querySelector("#city-form").addEventListener("submit",(e=>{e.preventDefault(),x=document.getElementById("city").value,C.innerText=x,b()})),C.innerText=x,b()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFNd0MsRUFBZ0IzRyxTQUFTVyxjQUFjLEtBQzdDZ0csRUFBY0gsVUFBWSxxQkFDMUJHLEVBQWNGLFVBQVlyRCxFQUMxQixNQUFNd0QsRUFBWTVHLFNBQVNXLGNBQWMsT0FDekNpRyxFQUFVQyxJQUFNeEQsRUFFaEJvRSxFQUFXVixPQUFPUixHQUNsQmtCLEVBQVdWLE9BQU9MLEdBQ2xCZSxFQUFXVixPQUFPSixHQUNsQmMsRUFBV1YsT0FBT0gsR0FFbEIsTUFBTUksRUFBWWhILFNBQVNXLGNBQWMsT0FDekNxRyxFQUFVUixVQUFZLG1CQUV0QixNQUFNWSxFQUFrQnBILFNBQVNXLGNBQWMsS0FDL0N5RyxFQUFnQlgsVUFBWSxhQUFhckMsSUFDekMsTUFBTWtELEVBQW9CdEgsU0FBU1csY0FBYyxLQUNqRDJHLEVBQWtCYixVQUFZLGVBQWVuQyxVQUU3QzBDLEVBQVVELE9BQU9LLEdBQ2pCSixFQUFVRCxPQUFPTyxHQUNqQkcsRUFBV1YsT0FBT0MsR0FFbEJoQyxFQUFtQitCLE9BQU9VLEVBQVcsR0VsRnZDLENBQUUsTUFBT0MsR0FDUEMsTUFBTSxzQkFBc0J6QyxtQ0FDOUIsQ0plRixJQUFtQ1UsRUF0QkNqSSxDSVFwQyxDQXRCaUJxQyxTQUFTQyxjQUFjLGNBQy9CMkgsaUJBQWlCLFVBQVd0SCxJQUNuQ0EsRUFBRXVILGlCQUNGM0MsRUFBT2xGLFNBQVM4SCxlQUFlLFFBQVFDLE1BQ3ZDNUMsRUFBWXNCLFVBQVl2QixFQUN4QkcsR0FBWSxJQWtCZEYsRUFBWXNCLFVBQVl2QixFQUN4QkcsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3dlYXRoZXItYXBwL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3dlYXRoZXItYXBwL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3dlYXRoZXItYXBwL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9hcGkta2V5LmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2N1cnJlbnRXZWF0aGVyLmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2ZvcmVjYXN0V2VhdGhlci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9kaXNwbGF5LmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMTBweDtcbn1cblxubGkge1xuICBwYWRkaW5nLXRvcDogNXB4O1xuICBwYWRkaW5nLWJvdHRvbTogNXB4O1xufVxuXG5oMyB7XG4gIG1hcmdpbjogMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5wIHtcbiAgbWFyZ2luOiA1cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmN1cnJlbnQge1xuICBib3JkZXI6IHNvbGlkIGJsYWNrO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uY3VycmVudC1kZXRhaWxzIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNCwgMjAwcHgpO1xufVxuXG4uZm9yZWNhc3Qge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xufVxuLmZvcmVjYXN0LWRheSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJvcmRlcjogc29saWQgYmxhY2s7XG59XG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSwyQkFBMkI7RUFDM0IsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsU0FBUztFQUNULGFBQWE7QUFDZjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxTQUFTO0VBQ1Qsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1Q0FBdUM7QUFDekM7O0FBRUE7RUFDRSxhQUFhO0VBQ2IscUNBQXFDO0FBQ3ZDO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQixtQkFBbUI7QUFDckJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiYm9keSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbnVsIHtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAxMHB4O1xcbn1cXG5cXG5saSB7XFxuICBwYWRkaW5nLXRvcDogNXB4O1xcbiAgcGFkZGluZy1ib3R0b206IDVweDtcXG59XFxuXFxuaDMge1xcbiAgbWFyZ2luOiAwO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG5wIHtcXG4gIG1hcmdpbjogNXB4O1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4uY3VycmVudCB7XFxuICBib3JkZXI6IHNvbGlkIGJsYWNrO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uY3VycmVudC1kZXRhaWxzIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAyMDBweCk7XFxufVxcblxcbi5mb3JlY2FzdCB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcXG59XFxuLmZvcmVjYXN0LWRheSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBib3JkZXI6IHNvbGlkIGJsYWNrO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiY29uc3QgYXBpS2V5ID0gYGJiMTFkNDRlZTRlYjRmYmRhNTUwNDYxNzI0MjYwM2A7XG5leHBvcnQgeyBhcGlLZXkgfTtcbiIsImNvbnN0IGN1cnJlbnRXZWF0aGVyRGF0YSA9IFtdO1xuXG5jbGFzcyBDdXJyZW50V2VhdGhlciB7XG4gIGNvbnN0cnVjdG9yKGNvbmRpdGlvbiwgaWNvbiwgZmVlbHNsaWtlX2YsIGd1c3RfbXBoLCBodW1pZGl0eSwgbGFzdF91cGRhdGVkLCBwcmVjaXBfaW4sIHRlbXBfZiwgdXYsIHZpc19taWxlcywgd2luZF9kaXIsIHdpbmRfbXBoKSB7XG4gICAgdGhpcy5jb25kaXRpb24gPSBjb25kaXRpb247XG4gICAgdGhpcy5pY29uID0gaWNvbjtcbiAgICB0aGlzLmZlZWxzbGlrZV9mID0gZmVlbHNsaWtlX2Y7XG4gICAgdGhpcy5ndXN0X21waCA9IGd1c3RfbXBoO1xuICAgIHRoaXMuaHVtaWRpdHkgPSBodW1pZGl0eTtcbiAgICB0aGlzLmxhc3RfdXBkYXRlZCA9IGxhc3RfdXBkYXRlZDtcbiAgICB0aGlzLnByZWNpcF9pbiA9IHByZWNpcF9pbjtcbiAgICB0aGlzLnRlbXBfZiA9IHRlbXBfZjtcbiAgICB0aGlzLnV2ID0gdXY7XG4gICAgdGhpcy52aXNfbWlsZXMgPSB2aXNfbWlsZXM7XG4gICAgdGhpcy53aW5kX2RpciA9IHdpbmRfZGlyO1xuICAgIHRoaXMud2luZF9tcGggPSB3aW5kX21waDtcbiAgfVxuXG4gIGFkZEN1cnJlbnRXZWF0aGVyRGF0YSgpIHtcbiAgICBjdXJyZW50V2VhdGhlckRhdGEucHVzaCh0aGlzKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVDdXJyZW50V2VhdGhlck9iamVjdChkYXRhKSB7XG4gIGNvbnN0IHdlYXRoZXIgPSBuZXcgQ3VycmVudFdlYXRoZXIoXG4gICAgZGF0YS5jb25kaXRpb24udGV4dCxcbiAgICBkYXRhLmNvbmRpdGlvbi5pY29uLFxuICAgIGRhdGEuZmVlbHNsaWtlX2YsXG4gICAgZGF0YS5ndXN0X21waCxcbiAgICBkYXRhLmh1bWlkaXR5LFxuICAgIGRhdGEubGFzdF91cGRhdGVkLFxuICAgIGRhdGEucHJlY2lwX2luLFxuICAgIGRhdGEudGVtcF9mLFxuICAgIGRhdGEudXYsXG4gICAgZGF0YS52aXNfbWlsZXMsXG4gICAgZGF0YS53aW5kX2RpcixcbiAgICBkYXRhLndpbmRfbXBoXG4gICk7XG4gIHdlYXRoZXIuYWRkQ3VycmVudFdlYXRoZXJEYXRhKCk7XG59XG5cbmZ1bmN0aW9uIGdldEN1cnJlbnRXZWF0aGVyRGF0YSgpIHtcbiAgcmV0dXJuIGN1cnJlbnRXZWF0aGVyRGF0YTtcbn1cblxuZnVuY3Rpb24gSlNPTnRvQ3VycmVudFdlYXRoZXJDbGFzcyhjdXJyZW50RGF0YSkge1xuICBjdXJyZW50V2VhdGhlckRhdGEubGVuZ3RoID0gMDtcbiAgY3JlYXRlQ3VycmVudFdlYXRoZXJPYmplY3QoY3VycmVudERhdGEpO1xufVxuXG5leHBvcnQgeyBKU09OdG9DdXJyZW50V2VhdGhlckNsYXNzLCBnZXRDdXJyZW50V2VhdGhlckRhdGEgfTtcbiIsImNvbnN0IGZvcmVjYXN0V2VhdGhlckRhdGEgPSBbXTtcblxuY2xhc3MgRm9yZWNhc3RXZWF0aGVyIHtcbiAgY29uc3RydWN0b3IoXG4gICAgZGF0ZSxcbiAgICBhdmdodW1pZGl0eSxcbiAgICBhdmd0ZW1wX2YsXG4gICAgYXZndmlzX21pbGVzLFxuICAgIGNvbmRpdGlvbixcbiAgICBpY29uLFxuICAgIGNoYW5jZV9yYWluLFxuICAgIGNoYW5jZV9zbm93LFxuICAgIG1heHRlbXBfZixcbiAgICBtYXh3aW5kX21waCxcbiAgICBtaW50ZW1wX2YsXG4gICAgdG90YWxwcmVjaXBfaW4sXG4gICAgdG90YWxzbm93X2NtLFxuICAgIHV2XG4gICkge1xuICAgIHRoaXMuZGF0ZSA9IGRhdGU7XG4gICAgdGhpcy5hdmdodW1pZGl0eSA9IGF2Z2h1bWlkaXR5O1xuICAgIHRoaXMuYXZndGVtcF9mID0gYXZndGVtcF9mO1xuICAgIHRoaXMuYXZndmlzX21pbGVzID0gYXZndmlzX21pbGVzO1xuICAgIHRoaXMuY29uZGl0aW9uID0gY29uZGl0aW9uO1xuICAgIHRoaXMuaWNvbiA9IGljb247XG4gICAgdGhpcy5jaGFuY2VfcmFpbiA9IGNoYW5jZV9yYWluO1xuICAgIHRoaXMuY2hhbmNlX3Nub3cgPSBjaGFuY2Vfc25vdztcbiAgICB0aGlzLm1heHRlbXBfZiA9IG1heHRlbXBfZjtcbiAgICB0aGlzLm1heHdpbmRfbXBoID0gbWF4d2luZF9tcGg7XG4gICAgdGhpcy5taW50ZW1wX2YgPSBtaW50ZW1wX2Y7XG4gICAgdGhpcy50b3RhbHByZWNpcF9pbiA9IHRvdGFscHJlY2lwX2luO1xuICAgIHRoaXMudG90YWxzbm93X2NtID0gdG90YWxzbm93X2NtO1xuICAgIHRoaXMudXYgPSB1djtcbiAgfVxuXG4gIGFkZEZvcmVjYXN0V2VhdGhlckRhdGEoKSB7XG4gICAgZm9yZWNhc3RXZWF0aGVyRGF0YS5wdXNoKHRoaXMpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUZvcmVjYXN0V2VhdGhlck9iamVjdChkYXRhKSB7XG4gIGNvbnN0IHdlYXRoZXIgPSBuZXcgRm9yZWNhc3RXZWF0aGVyKFxuICAgIGRhdGEuZGF0ZSxcbiAgICBkYXRhLmRheS5hdmdodW1pZGl0eSxcbiAgICBkYXRhLmRheS5hdmd0ZW1wX2YsXG4gICAgZGF0YS5kYXkuYXZndmlzX21pbGVzLFxuICAgIGRhdGEuZGF5LmNvbmRpdGlvbi50ZXh0LFxuICAgIGRhdGEuZGF5LmNvbmRpdGlvbi5pY29uLFxuICAgIGRhdGEuY2hhbmNlX3JhaW4sXG4gICAgZGF0YS5jaGFuY2Vfc25vdyxcbiAgICBkYXRhLm1heHRlbXBfZixcbiAgICBkYXRhLm1heHdpbmRfbXBoLFxuICAgIGRhdGEubWludGVtcF9mLFxuICAgIGRhdGEudG90YWxwcmVjaXBfaW4sXG4gICAgZGF0YS50b3RhbHNub3dfY20sXG4gICAgZGF0YS51dlxuICApO1xuICB3ZWF0aGVyLmFkZEZvcmVjYXN0V2VhdGhlckRhdGEoKTtcbn1cblxuZnVuY3Rpb24gZ2V0Rm9yZWNhc3RXZWF0aGVyRGF0YSgpIHtcbiAgcmV0dXJuIGZvcmVjYXN0V2VhdGhlckRhdGE7XG59XG5cbmZ1bmN0aW9uIEpTT050b0ZvcmVjYXN0V2VhdGhlckNsYXNzKGZvcmVjYXN0RGF0YSkge1xuICBmb3JlY2FzdFdlYXRoZXJEYXRhLmxlbmd0aCA9IDA7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZm9yZWNhc3REYXRhLmZvcmVjYXN0ZGF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgY3JlYXRlRm9yZWNhc3RXZWF0aGVyT2JqZWN0KGZvcmVjYXN0RGF0YS5mb3JlY2FzdGRheVtpXSk7XG4gIH1cbiAgLy8gICBjcmVhdGVGb3JlY2FzdFdlYXRoZXJPYmplY3QoZm9yZWNhc3REYXRhKTtcbn1cblxuZXhwb3J0IHsgSlNPTnRvRm9yZWNhc3RXZWF0aGVyQ2xhc3MsIGdldEZvcmVjYXN0V2VhdGhlckRhdGEgfTtcbiIsImltcG9ydCB7IGdldEN1cnJlbnRXZWF0aGVyRGF0YSB9IGZyb20gXCIuL2N1cnJlbnRXZWF0aGVyXCI7XG5pbXBvcnQgeyBnZXRGb3JlY2FzdFdlYXRoZXJEYXRhIH0gZnJvbSBcIi4vZm9yZWNhc3RXZWF0aGVyXCI7XG5cbmNvbnN0IGN1cnJlbnRXZWF0aGVyRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jdXJyZW50XCIpO1xuY29uc3QgZm9yZWNhc3RXZWF0aGVyRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb3JlY2FzdFwiKTtcblxuZnVuY3Rpb24gZGlzcGxheUN1cnJlbnRXZWF0aGVyKCkge1xuICBjdXJyZW50V2VhdGhlckRpdi5pbm5lckhUTUwgPSBcIlwiO1xuICBjb25zdCBkYXRhID0gZ2V0Q3VycmVudFdlYXRoZXJEYXRhKClbMF07XG4gIGNvbnN0IHRlbXAgPSBgQ3VycmVudCBUZW1wICR7ZGF0YS50ZW1wX2Z9XFx1MDBCMEZgO1xuICBjb25zdCBkYXRlID0gZGF0YS5sYXN0X3VwZGF0ZWQuc3BsaXQoXCIgXCIpWzBdO1xuICBjb25zdCBjb25kaXRpb24gPSBkYXRhLmNvbmRpdGlvbjtcbiAgY29uc3QgaWNvbiA9IGRhdGEuaWNvbjtcbiAgLy8gY29uc3QgcHJlY2lwX2luID0gZGF0YS5wcmVjaXBfaW47XG5cbiAgY29uc3Qgd2luZF9kaXIgPSBkYXRhLndpbmRfZGlyO1xuICBjb25zdCB3aW5kX21waCA9IGRhdGEud2luZF9tcGg7XG5cbiAgY29uc3QgdGVtcExpbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgdGVtcExpbmUuY2xhc3NOYW1lID0gXCJjdXJyZW50LXRlbXBcIjtcbiAgdGVtcExpbmUuaW5uZXJUZXh0ID0gdGVtcDtcblxuICBjb25zdCBkYXRlTGluZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICBkYXRlTGluZS5jbGFzc05hbWUgPSBcImN1cnJlbnQtZGF0ZVwiO1xuICBkYXRlTGluZS5pbm5lclRleHQgPSBkYXRlO1xuXG4gIGNvbnN0IGNvbmRpdGlvbkxpbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgY29uZGl0aW9uTGluZS5jbGFzc05hbWUgPSBcImN1cnJlbnQtY29uZGl0aW9uXCI7XG4gIGNvbmRpdGlvbkxpbmUuaW5uZXJUZXh0ID0gY29uZGl0aW9uO1xuICBjb25zdCBpY29uSW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICBpY29uSW1hZ2Uuc3JjID0gaWNvbjtcblxuICBjb25zdCBkZXNjcmlwdGlvbkxpbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgZGVzY3JpcHRpb25MaW5lLmNsYXNzTmFtZSA9IFwiY3VycmVudC1kZXNjcml0aW9uXCI7XG4gIGRlc2NyaXB0aW9uTGluZS5pbm5lclRleHQgPSBgV2luZCAke3dpbmRfZGlyfSBhdCAke3dpbmRfbXBofSBtcGguYDtcblxuICBjdXJyZW50V2VhdGhlckRpdi5hcHBlbmQodGVtcExpbmUpO1xuICBjdXJyZW50V2VhdGhlckRpdi5hcHBlbmQoZGF0ZUxpbmUpO1xuICBjdXJyZW50V2VhdGhlckRpdi5hcHBlbmQoY29uZGl0aW9uTGluZSk7XG4gIGN1cnJlbnRXZWF0aGVyRGl2LmFwcGVuZChpY29uSW1hZ2UpO1xuICBjdXJyZW50V2VhdGhlckRpdi5hcHBlbmQoZGVzY3JpcHRpb25MaW5lKTtcblxuICBjb25zdCBkZXRhaWxEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBkZXRhaWxEaXYuY2xhc3NOYW1lID0gXCJjdXJyZW50LWRldGFpbHNcIjtcblxuICBjb25zdCBmZWVsc0xpa2UgPSBkYXRhLmZlZWxzbGlrZV9mO1xuICBjb25zdCBodW1pZGl0eSA9IGRhdGEuaHVtaWRpdHk7XG4gIGNvbnN0IHV2ID0gZGF0YS51djtcbiAgY29uc3QgdmlzaWJpbGl0eSA9IGRhdGEudmlzX21pbGVzO1xuXG4gIGNvbnN0IGZlZWxzTGlrZVNlY3Rpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgZmVlbHNMaWtlU2VjdGlvbi5pbm5lclRleHQgPSBgRmVlbHMgbGlrZVxcbiR7ZmVlbHNMaWtlfVxcdTAwQjBGYDtcbiAgY29uc3QgaHVtaWRpdHlTZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIGh1bWlkaXR5U2VjdGlvbi5pbm5lclRleHQgPSBgSHVtaWRpdHlcXG4ke2h1bWlkaXR5fWA7XG4gIGNvbnN0IHV2U2VjdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICB1dlNlY3Rpb24uaW5uZXJUZXh0ID0gYFVWIGluZGV4XFxuJHt1dn1gO1xuICBjb25zdCB2aXNpYmlsaXR5U2VjdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICB2aXNpYmlsaXR5U2VjdGlvbi5pbm5lclRleHQgPSBgVmlzaWJpbGl0eVxcbiR7dmlzaWJpbGl0eX0gbWlsZXNgO1xuXG4gIGRldGFpbERpdi5hcHBlbmQoZmVlbHNMaWtlU2VjdGlvbik7XG4gIGRldGFpbERpdi5hcHBlbmQoaHVtaWRpdHlTZWN0aW9uKTtcbiAgZGV0YWlsRGl2LmFwcGVuZCh1dlNlY3Rpb24pO1xuICBkZXRhaWxEaXYuYXBwZW5kKHZpc2liaWxpdHlTZWN0aW9uKTtcbiAgY3VycmVudFdlYXRoZXJEaXYuYXBwZW5kKGRldGFpbERpdik7XG59XG5cbmZ1bmN0aW9uIGRpc3BsYXlGb3JlY2FzdFdlYXRoZXIoKSB7XG4gIGZvcmVjYXN0V2VhdGhlckRpdi5pbm5lckhUTUwgPSBcIlwiO1xuICBjb25zdCBkYXRhID0gZ2V0Rm9yZWNhc3RXZWF0aGVyRGF0YSgpO1xuICBkYXRhLmZvckVhY2goKHdlYXRoZXJEYXRhKSA9PiB7XG4gICAgY29uc3QgZGF5RGF0YURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgZGF5RGF0YURpdi5jbGFzc05hbWUgPSBcImZvcmVjYXN0LWRheVwiO1xuICAgIGNvbnN0IGRhdGUgPSB3ZWF0aGVyRGF0YS5kYXRlO1xuICAgIGNvbnN0IGF2Z2h1bWlkaXR5ID0gd2VhdGhlckRhdGEuYXZnaHVtaWRpdHk7XG4gICAgY29uc3QgYXZndGVtcF9mID0gd2VhdGhlckRhdGEuYXZndGVtcF9mO1xuICAgIGNvbnN0IGF2Z3Zpc19taWxlcyA9IHdlYXRoZXJEYXRhLmF2Z3Zpc19taWxlcztcbiAgICBjb25zdCBjb25kaXRpb24gPSB3ZWF0aGVyRGF0YS5jb25kaXRpb247XG4gICAgY29uc3QgaWNvbiA9IHdlYXRoZXJEYXRhLmljb247XG5cbiAgICBjb25zdCB0ZW1wTGluZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgIHRlbXBMaW5lLmNsYXNzTmFtZSA9IFwiZm9yZWNhc3QtdGVtcFwiO1xuICAgIHRlbXBMaW5lLmlubmVyVGV4dCA9IGBBdmVyYWdlIFRlbXA6ICR7YXZndGVtcF9mfWA7XG5cbiAgICBjb25zdCBkYXRlTGluZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgIGRhdGVMaW5lLmNsYXNzTmFtZSA9IFwiZm9yZWNhc3QtZGF0ZVwiO1xuICAgIGRhdGVMaW5lLmlubmVyVGV4dCA9IGRhdGU7XG5cbiAgICBjb25zdCBjb25kaXRpb25MaW5lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgY29uZGl0aW9uTGluZS5jbGFzc05hbWUgPSBcImZvcmVjYXN0LWNvbmRpdGlvblwiO1xuICAgIGNvbmRpdGlvbkxpbmUuaW5uZXJUZXh0ID0gY29uZGl0aW9uO1xuICAgIGNvbnN0IGljb25JbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gICAgaWNvbkltYWdlLnNyYyA9IGljb247XG5cbiAgICBkYXlEYXRhRGl2LmFwcGVuZCh0ZW1wTGluZSk7XG4gICAgZGF5RGF0YURpdi5hcHBlbmQoZGF0ZUxpbmUpO1xuICAgIGRheURhdGFEaXYuYXBwZW5kKGNvbmRpdGlvbkxpbmUpO1xuICAgIGRheURhdGFEaXYuYXBwZW5kKGljb25JbWFnZSk7XG5cbiAgICBjb25zdCBkZXRhaWxEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGRldGFpbERpdi5jbGFzc05hbWUgPSBcImZvcmVjYXN0LWRldGFpbHNcIjtcblxuICAgIGNvbnN0IGh1bWlkaXR5U2VjdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgIGh1bWlkaXR5U2VjdGlvbi5pbm5lclRleHQgPSBgSHVtaWRpdHk6ICR7YXZnaHVtaWRpdHl9YDtcbiAgICBjb25zdCB2aXNpYmlsaXR5U2VjdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgIHZpc2liaWxpdHlTZWN0aW9uLmlubmVyVGV4dCA9IGBWaXNpYmlsaXR5OiAke2F2Z3Zpc19taWxlc30gbWlsZXNgO1xuXG4gICAgZGV0YWlsRGl2LmFwcGVuZChodW1pZGl0eVNlY3Rpb24pO1xuICAgIGRldGFpbERpdi5hcHBlbmQodmlzaWJpbGl0eVNlY3Rpb24pO1xuICAgIGRheURhdGFEaXYuYXBwZW5kKGRldGFpbERpdik7XG5cbiAgICBmb3JlY2FzdFdlYXRoZXJEaXYuYXBwZW5kKGRheURhdGFEaXYpO1xuICB9KTtcbn1cblxuZXhwb3J0IHsgZGlzcGxheUN1cnJlbnRXZWF0aGVyLCBkaXNwbGF5Rm9yZWNhc3RXZWF0aGVyIH07XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBhcGlLZXkgfSBmcm9tIFwiLi9hcGkta2V5XCI7XG5pbXBvcnQgeyBKU09OdG9DdXJyZW50V2VhdGhlckNsYXNzIH0gZnJvbSBcIi4vY3VycmVudFdlYXRoZXJcIjtcbmltcG9ydCB7IEpTT050b0ZvcmVjYXN0V2VhdGhlckNsYXNzIH0gZnJvbSBcIi4vZm9yZWNhc3RXZWF0aGVyXCI7XG5pbXBvcnQgeyBkaXNwbGF5Q3VycmVudFdlYXRoZXIgfSBmcm9tIFwiLi9kaXNwbGF5XCI7XG5pbXBvcnQgeyBkaXNwbGF5Rm9yZWNhc3RXZWF0aGVyIH0gZnJvbSBcIi4vZGlzcGxheVwiO1xuaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcblxubGV0IGNpdHkgPSBcIkNoaWNhZ29cIjtcbmNvbnN0IGN1cnJlbnRDaXR5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jdXJyZW50LWNpdHlcIik7XG5jb25zdCBjaXR5Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2l0eS1mb3JtXCIpO1xuY2l0eUZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIGNpdHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNpdHlcIikudmFsdWU7XG4gIGN1cnJlbnRDaXR5LmlubmVyVGV4dCA9IGNpdHk7XG4gIGdldFdlYXRoZXIoKTtcbn0pO1xuXG5hc3luYyBmdW5jdGlvbiBnZXRXZWF0aGVyKCkge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLndlYXRoZXJhcGkuY29tL3YxL2ZvcmVjYXN0Lmpzb24/a2V5PSR7YXBpS2V5fSZxPSR7Y2l0eX0mZGF5cz0zYCk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHJlc3BvbnNlLnN0YXR1cyk7XG4gICAgfVxuICAgIGNvbnN0IHdlYXRoZXJEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIEpTT050b0N1cnJlbnRXZWF0aGVyQ2xhc3Mod2VhdGhlckRhdGEuY3VycmVudCk7XG4gICAgSlNPTnRvRm9yZWNhc3RXZWF0aGVyQ2xhc3Mod2VhdGhlckRhdGEuZm9yZWNhc3QpO1xuICAgIGRpc3BsYXlDdXJyZW50V2VhdGhlcigpO1xuICAgIGRpc3BsYXlGb3JlY2FzdFdlYXRoZXIoKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBhbGVydChgRXJyb3IhIFlvdSBlbnRlcmVkICR7Y2l0eX0uIFBsZWFzZSByZS1lbnRlciB0aGUgY2l0eSBuYW1lYCk7XG4gIH1cbn1cbmN1cnJlbnRDaXR5LmlubmVyVGV4dCA9IGNpdHk7XG5nZXRXZWF0aGVyKCk7XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIiwiY3VycmVudFdlYXRoZXJEYXRhIiwiQ3VycmVudFdlYXRoZXIiLCJjb25zdHJ1Y3RvciIsImNvbmRpdGlvbiIsImljb24iLCJmZWVsc2xpa2VfZiIsImd1c3RfbXBoIiwiaHVtaWRpdHkiLCJsYXN0X3VwZGF0ZWQiLCJwcmVjaXBfaW4iLCJ0ZW1wX2YiLCJ1diIsInZpc19taWxlcyIsIndpbmRfZGlyIiwid2luZF9tcGgiLCJhZGRDdXJyZW50V2VhdGhlckRhdGEiLCJmb3JlY2FzdFdlYXRoZXJEYXRhIiwiRm9yZWNhc3RXZWF0aGVyIiwiZGF0ZSIsImF2Z2h1bWlkaXR5IiwiYXZndGVtcF9mIiwiYXZndmlzX21pbGVzIiwiY2hhbmNlX3JhaW4iLCJjaGFuY2Vfc25vdyIsIm1heHRlbXBfZiIsIm1heHdpbmRfbXBoIiwibWludGVtcF9mIiwidG90YWxwcmVjaXBfaW4iLCJ0b3RhbHNub3dfY20iLCJhZGRGb3JlY2FzdFdlYXRoZXJEYXRhIiwiY3VycmVudFdlYXRoZXJEaXYiLCJmb3JlY2FzdFdlYXRoZXJEaXYiLCJsb2NhbHMiLCJjaXR5IiwiY3VycmVudENpdHkiLCJhc3luYyIsImdldFdlYXRoZXIiLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJzdGF0dXMiLCJ3ZWF0aGVyRGF0YSIsImpzb24iLCJjdXJyZW50RGF0YSIsImN1cnJlbnQiLCJ0ZXh0IiwiZm9yZWNhc3REYXRhIiwiZm9yZWNhc3RkYXkiLCJkYXkiLCJKU09OdG9Gb3JlY2FzdFdlYXRoZXJDbGFzcyIsImZvcmVjYXN0IiwiaW5uZXJIVE1MIiwidGVtcCIsInNwbGl0IiwidGVtcExpbmUiLCJjbGFzc05hbWUiLCJpbm5lclRleHQiLCJkYXRlTGluZSIsImNvbmRpdGlvbkxpbmUiLCJpY29uSW1hZ2UiLCJzcmMiLCJkZXNjcmlwdGlvbkxpbmUiLCJhcHBlbmQiLCJkZXRhaWxEaXYiLCJmZWVsc0xpa2UiLCJ2aXNpYmlsaXR5IiwiZmVlbHNMaWtlU2VjdGlvbiIsImh1bWlkaXR5U2VjdGlvbiIsInV2U2VjdGlvbiIsInZpc2liaWxpdHlTZWN0aW9uIiwiZGlzcGxheUN1cnJlbnRXZWF0aGVyIiwiZm9yRWFjaCIsImRheURhdGFEaXYiLCJlcnJvciIsImFsZXJ0IiwiYWRkRXZlbnRMaXN0ZW5lciIsInByZXZlbnREZWZhdWx0IiwiZ2V0RWxlbWVudEJ5SWQiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=